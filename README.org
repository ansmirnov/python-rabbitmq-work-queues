#+TITLE: Using work queues in RabbitMQ and Python

** Contents                                                           :TOC_3:
  - [[#environment-description][Environment description]]
  - [[#producer][Producer]]
    - [[#imports][Imports]]
    - [[#parameters][Parameters]]
    - [[#queue-parameters][Queue parameters]]
    - [[#messages-parameters][Messages parameters]]
    - [[#creds][Creds]]
    - [[#declare-queue][Declare queue]]
    - [[#message][Message]]
    - [[#publish][Publish]]
  - [[#references][References]]

** Environment description

- Deployed RabbitMQ 3.8.11

- Python 3.9.1

Python requirements

#+BEGIN_SRC conf :tangle requirements.txt
pika==1.1.0
#+END_SRC

** Producer
   :PROPERTIES:
   :header-args: :session *shell rabbitmq producer* :results silent raw :tangle src/producer.py
   :END:

*** Imports

Import system modules.

#+BEGIN_SRC python
import os
import sys
#+END_SRC

Import pika.

#+BEGIN_SRC python
import pika
#+END_SRC

*** Parameters

#+BEGIN_SRC python
RABBITMQ_HOST = os.environ.get("RABBITMQ_HOST")
RABBITMQ_USER = os.environ.get("RABBITMQ_USER")
RABBITMQ_PASSWORD = os.environ.get("RABBITMQ_PASSWORD")
#+END_SRC

*** Queue parameters

#+BEGIN_SRC python
RABBITMQ_QUEUE = os.environ.get("RABBITMQ_QUEUE")
RABBITMQ_DURABLE = bool(os.environ.get("RABBITME_DURABLE"))
#+END_SRC

*** Messages parameters

#+BEGIN_SRC python
RABBITMQ_DELIVERY_MODE = int(os.environ.get("RABBITMQ_DELIVERY_MODE"))
#+END_SRC

*** Creds

#+BEGIN_SRC python
credentials = pika.PlainCredentials(RABBITMQ_USER, RABBITMQ_PASSWORD)
#+END_SRC

*** Declare queue

#+BEGIN_SRC python
channel.queue_declare(queue=RABBITMQ_QUEUE, durable=RABBITMQ_DURABLE)
#+END_SRC

*** Message

#+BEGIN_SRC python
message = ' '.join(sys.argv[1:]) or "Hello World!"
#+END_SRC

*** Publish

#+BEGIN_SRC python
channel.basic_publish(
    exchange='',
    routing_key=RABBITMQ_QUEUE,
    body=message,
    properties=pika.BasicProperties(
        delivery_mode=RABBITMQ_DELIVERY_MODE,
    ))
#+END_SRC

** References

1. https://www.rabbitmq.com/tutorials/tutorial-two-python.html

2. https://www.enterpriseintegrationpatterns.com/patterns/messaging/CompetingConsumers.html
